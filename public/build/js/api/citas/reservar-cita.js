async function reservarCita(t){const{id:e,fecha:o,hora:r,servicios:a}=t,s=a.map((t=>t.id)),i=new FormData;i.append("usuarioId",e),i.append("fecha",o),i.append("hora",r),i.append("serviciosId",s);try{const t=await fetch("/api/citas",{method:"POST",body:i});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);try{if((await t.json()).resultado)return Swal.fire({icon:"success",title:"Cita creada",text:"La cita se registro correctamente ðŸ˜€",bottom:"OK"}).then((()=>{setTimeout((()=>{window.location.reload()}),7e3)})),!0}catch(e){console.error("JSON parsing error:",e);const o=await t.text();console.log("Response text:",o)}}catch(t){console.error("Fetch error:",t),Swal.fire({icon:"error",title:"Oops...",text:`Algo salio mal :( intente en otro momento ${t}`,bottom:"OK"})}}async function getCitas(){try{const t="/api/citas",e=await fetch(t);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}catch(t){console.log(t)}}export{reservarCita,getCitas};