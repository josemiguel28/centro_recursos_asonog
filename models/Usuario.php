<?phpnamespace Model;class Usuario extends ActiveRecord{    // base de datos     protected static $tabla = 'usuarios';    protected static $columnasDB = ['id', 'nombre', 'apellido', 'email', 'telefono', 'password', 'admin', 'confirmado', 'token'];    public $id;    public $nombre;    public $apellido;    public $email;    public $telefono;    public $password;    public $admin;    public $confirmado;    public $token;    public function __construct($args = [])    {        $this->id = $args['id'] ?? null;        $this->nombre = $args['nombre'] ?? '';        $this->apellido = $args['apellido'] ?? '';        $this->email = $args['email'] ?? '';        $this->telefono = $args['telefono'] ?? '';        $this->password = $args['password'] ?? '';        $this->admin = $args['admin'] ?? "0";        $this->confirmado = $args['confirmado'] ?? "0";        $this->token = $args['token'] ?? '';    }    //mensajes de validacion para la creacion de cuenta    public function validarDatosNuevaCuenta(): array    {        if (!$this->nombre) {            self::$alertas['error'][] = 'El nombre es obligatorio';        }        if (!$this->apellido) {            self::$alertas['error'][] = 'El apellido es obligatorio';        }        if (!$this->email) {            self::$alertas['error'][] = 'El correo es obligatorio';        }        if (!$this->telefono) {            self::$alertas['error'][] = 'El telefono es obligatorio';        }        if (!$this->password) {            self::$alertas['error'][] = 'La contraseña es obligatoria';        }        if (strlen($this->password) < 6) {            self::$alertas['error'][] = 'La contraseña debe tener al menos 6 caracteres';        }        return self::$alertas;    }        public function validarEmail(): array    {        if (!$this->email) {            self::$alertas['error'][] = 'El correo es obligatorio';        }                return self::$alertas;    }    //validar contraseña cuando el usuario quiere cambiar su contraseña    public function validarPassword($crrtnPassword): array    {        if (!$this->password) {            self::$alertas['error'][] = 'La contraseña es obligatoria';        }        if (strlen($this->password) < 6) {            self::$alertas['error'][] = 'La contraseña debe tener al menos 6 caracteres';        }                if(password_verify($crrtnPassword,$this->password)){            self::$alertas['error'][] = 'La nueva contraseña debe ser diferente a la contraseña actual';        }        return self::$alertas;    }    //revisa si el usuario existe    public function isUserRegistered(): bool    {        $query = "SELECT * FROM " . self::$tabla . " WHERE email = '" . $this->email . "' LIMIT 1";        $resultado = self::$db->query($query)->num_rows;        if ($resultado > 0) {            self::$alertas["error"][] = "El usuario ya esta registrado";            return true;        }        return false;    }    public function hashPassword(): void    {        $this->password = password_hash($this->password, PASSWORD_BCRYPT);    }    public function createToken(): void    {        $this->token = uniqid();    }    public function validarLoginInputs(): array    {        if (!$this->email) {            self::$alertas["error"][] = "El correo es obligatorio";        }        if (!$this->password) {            self::$alertas["error"][] = "La contraseña es obligatoria";        }        return self::$alertas;    }    public function comprobarPasswordAndVerificado($password):bool    {        $resultado = password_verify($password, $this->password);        if (!$resultado || !$this->confirmado) {            return false;        } else {            return true;        }    }}